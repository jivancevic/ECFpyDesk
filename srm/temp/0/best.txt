0
(-0.549629 - x1)
<Individual size="1">
	<FitnessMin value="0.286611"/>
	<Tree size="3">- D_-0.549629 x1 </Tree>
</Individual>

10
(-0.557157 * (((x1 + (((x2 / x2) * (x2 * x1)) * ((0.185542 - 0.97584) * (x1 / 0.972523)))) / x1) + x1))
<Individual size="1">
	<FitnessMin value="0.118864"/>
	<Tree size="23">* D_-0.557157 + / + x1 * * / x2 x2 * x2 x1 * - D_0.185542 D_0.97584 / x1 D_0.972523 x1 x1 </Tree>
</Individual>

20
(((((-0.597477 * 0.732124) - (x1 - x1)) + ((-0.00591151 - -0.459231) * (-0.351974 + -0.334087))) - (-0.549629 * x1)) * (((x1 + (((x2 / x2) * (x2 * x1)) * ((0.185542 - 0.97584) * (x1 * 0.972523)))) / x1) + x1))
<Individual size="1">
	<FitnessMin value="0.0617957"/>
	<Tree size="41">* - + - * D_-0.597477 D_0.732124 - x1 x1 * - D_-0.00591151 D_-0.459231 + D_-0.351974 D_-0.334087 * D_-0.549629 x1 + / + x1 * * / x2 x2 * x2 x1 * - D_0.185542 D_0.97584 * x1 D_0.972523 x1 x1 </Tree>
</Individual>

30
(((((-0.597477 * 0.732124) - (x1 - x1)) + ((-0.00591151 - -0.459231) * (-0.334087 + -0.334087))) - (-0.549629 * x1)) * (((x1 + (((x2 / x2) * (x2 * x1)) * ((0.356285 - 0.97584) * (x1 / 0.972523)))) / x1) + x1))
<Individual size="1">
	<FitnessMin value="0.0606558"/>
	<Tree size="41">* - + - * D_-0.597477 D_0.732124 - x1 x1 * - D_-0.00591151 D_-0.459231 + D_-0.334087 D_-0.334087 * D_-0.549629 x1 + / + x1 * * / x2 x2 * x2 x1 * - D_0.356285 D_0.97584 / x1 D_0.972523 x1 x1 </Tree>
</Individual>

40
(((((-0.597477 * 0.732124) - (x1 - x1)) + ((-0.00591151 - -0.459231) * (-0.334087 + -0.334087))) - (-0.549629 * x1)) * (((x1 + (((x2 / x2) * (x2 * x1)) * ((0.356285 - 0.97584) - (x1 / 0.972523)))) / x1) + x1))
<Individual size="1">
	<FitnessMin value="0.0581926"/>
	<Tree size="41">* - + - * D_-0.597477 D_0.732124 - x1 x1 * - D_-0.00591151 D_-0.459231 + D_-0.334087 D_-0.334087 * D_-0.549629 x1 + / + x1 * * / x2 x2 * x2 x1 - - D_0.356285 D_0.97584 / x1 D_0.972523 x1 x1 </Tree>
</Individual>

50
(((((-0.597477 * 0.732124) - (x1 - x1)) + (0.424462 * (-0.351974 + -0.334087))) - (-0.549629 * x1)) * (((x1 + (((x2 / x2) * (x2 * x1)) * ((0.356285 - 0.97584) - (x1 / 0.972523)))) / x1) + x1))
<Individual size="1">
	<FitnessMin value="0.0568452"/>
	<Tree size="39">* - + - * D_-0.597477 D_0.732124 - x1 x1 * D_0.424462 + D_-0.351974 D_-0.334087 * D_-0.549629 x1 + / + x1 * * / x2 x2 * x2 x1 - - D_0.356285 D_0.97584 / x1 D_0.972523 x1 x1 </Tree>
</Individual>

60
(((((-0.597477 * 0.732124) - (x1 - x1)) + (0.424462 * (-0.334087 + -0.334087))) - (-0.549629 * x1)) * (((x1 + (((x2 / x2) * (x2 * x1)) * ((-0.374996 * 0.97584) - (x1 / 0.972523)))) / x1) + x1))
<Individual size="1">
	<FitnessMin value="0.0412961"/>
	<Tree size="39">* - + - * D_-0.597477 D_0.732124 - x1 x1 * D_0.424462 + D_-0.334087 D_-0.334087 * D_-0.549629 x1 + / + x1 * * / x2 x2 * x2 x1 - * D_-0.374996 D_0.97584 / x1 D_0.972523 x1 x1 </Tree>
</Individual>

70
(((((-0.597477 * 0.732124) - (x1 - x1)) + (0.424462 * (-0.334087 + -0.334087))) - (-0.597477 * x1)) * (((x1 + (((x2 / x2) * (x2 * x1)) * ((-0.374996 * 0.97584) - (x1 / 0.972523)))) / x1) + x1))
<Individual size="1">
	<FitnessMin value="0.0409361"/>
	<Tree size="39">* - + - * D_-0.597477 D_0.732124 - x1 x1 * D_0.424462 + D_-0.334087 D_-0.334087 * D_-0.597477 x1 + / + x1 * * / x2 x2 * x2 x1 - * D_-0.374996 D_0.97584 / x1 D_0.972523 x1 x1 </Tree>
</Individual>

80
(((((-0.597477 * 0.732124) - (x1 - x1)) + ((-0.00591151 - -0.459231) * (-0.334087 + -0.334087))) - (-0.597477 * x1)) * ((((((x2 / x2) * (x2 * x1)) * ((-0.374996 / 0.97584) - (x1 / 0.972523))) + x1) / x1) + x1))
<Individual size="1">
	<FitnessMin value="0.0407331"/>
	<Tree size="41">* - + - * D_-0.597477 D_0.732124 - x1 x1 * - D_-0.00591151 D_-0.459231 + D_-0.334087 D_-0.334087 * D_-0.597477 x1 + / + * * / x2 x2 * x2 x1 - / D_-0.374996 D_0.97584 / x1 D_0.972523 x1 x1 x1 </Tree>
</Individual>

90
(((-0.456361 + (0.424462 * (-0.334087 + -0.334087))) - (-0.597477 * x1)) * (((x1 + (((x2 / x2) * (x2 * x1)) * ((-0.374996 / 0.97584) - (x1 / 0.963109)))) / x1) + x1))
<Individual size="1">
	<FitnessMin value="0.0405919"/>
	<Tree size="33">* - + D_-0.456361 * D_0.424462 + D_-0.334087 D_-0.334087 * D_-0.597477 x1 + / + x1 * * / x2 x2 * x2 x1 - / D_-0.374996 D_0.97584 / x1 D_0.963109 x1 x1 </Tree>
</Individual>

100
(((((-0.597477 * 0.732124) - (x1 - x1)) + (0.424462 * ((-0.374996 * 0.97584) + -0.334087))) - (-0.597477 * x1)) * (((x1 + (((x2 / x2) * (x2 * x1)) * ((-0.383385 / 0.97584) - (x1 / 0.963109)))) / x1) + x1))
<Individual size="1">
	<FitnessMin value="0.0404997"/>
	<Tree size="41">* - + - * D_-0.597477 D_0.732124 - x1 x1 * D_0.424462 + * D_-0.374996 D_0.97584 D_-0.334087 * D_-0.597477 x1 + / + x1 * * / x2 x2 * x2 x1 - / D_-0.383385 D_0.97584 / x1 D_0.963109 x1 x1 </Tree>
</Individual>

110
(((((-0.597477 * 0.732124) - (x1 - x1)) + (0.424462 * ((-0.374996 * 0.963109) + -0.334087))) - (-0.597477 * x1)) * (((x1 + (((x2 / x2) * (x2 * x1)) * ((-0.374996 / 0.963109) - (x1 / 0.963109)))) / x1) + x1))
<Individual size="1">
	<FitnessMin value="0.0404882"/>
	<Tree size="41">* - + - * D_-0.597477 D_0.732124 - x1 x1 * D_0.424462 + * D_-0.374996 D_0.963109 D_-0.334087 * D_-0.597477 x1 + / + x1 * * / x2 x2 * x2 x1 - / D_-0.374996 D_0.963109 / x1 D_0.963109 x1 x1 </Tree>
</Individual>

120
(((((-0.597477 * 0.732124) - (x1 - x1)) + (0.424462 * ((-0.374996 * 0.963109) + -0.334087))) - (-0.597477 * x1)) * (((x1 + (((x2 / x2) * (x2 * x1)) * ((-0.374996 / 0.963109) - (x1 / 0.963109)))) / x1) + x1))
<Individual size="1">
	<FitnessMin value="0.0404882"/>
	<Tree size="41">* - + - * D_-0.597477 D_0.732124 - x1 x1 * D_0.424462 + * D_-0.374996 D_0.963109 D_-0.334087 * D_-0.597477 x1 + / + x1 * * / x2 x2 * x2 x1 - / D_-0.374996 D_0.963109 / x1 D_0.963109 x1 x1 </Tree>
</Individual>

130
(((((-0.597477 * 0.732124) - (x1 - x1)) + (0.424462 * ((-0.374996 * 0.963109) + -0.334087))) - (-0.597477 * x1)) * (((x1 + (((x2 / x2) * (x2 * x1)) * ((-0.374996 / 0.963109) - (x1 / 0.920495)))) / x1) + x1))
<Individual size="1">
	<FitnessMin value="0.0400879"/>
	<Tree size="41">* - + - * D_-0.597477 D_0.732124 - x1 x1 * D_0.424462 + * D_-0.374996 D_0.963109 D_-0.334087 * D_-0.597477 x1 + / + x1 * * / x2 x2 * x2 x1 - / D_-0.374996 D_0.963109 / x1 D_0.920495 x1 x1 </Tree>
</Individual>

140
(((((-0.597477 * 0.732124) - (x1 - x1)) + (0.424462 * ((-0.374996 * 0.963109) + -0.334087))) - (-0.597477 * x1)) * (((x1 + (((x2 / x2) * (x2 * x1)) * ((-0.374996 / 0.963109) - (x1 / 0.920495)))) / x1) + x1))
<Individual size="1">
	<FitnessMin value="0.0400879"/>
	<Tree size="41">* - + - * D_-0.597477 D_0.732124 - x1 x1 * D_0.424462 + * D_-0.374996 D_0.963109 D_-0.334087 * D_-0.597477 x1 + / + x1 * * / x2 x2 * x2 x1 - / D_-0.374996 D_0.963109 / x1 D_0.920495 x1 x1 </Tree>
</Individual>

150
((((x1 + (((x2 / x2) * (x2 * x1)) * ((-0.597477 * 0.732124) - (x1 / 0.920495)))) / x1) + x1) * ((((-0.597477 * 0.732124) - (x1 - x1)) + (0.424462 * ((-0.374996 * 0.963109) + -0.334087))) - (-0.597477 * x1)))
<Individual size="1">
	<FitnessMin value="0.0399634"/>
	<Tree size="41">* + / + x1 * * / x2 x2 * x2 x1 - * D_-0.597477 D_0.732124 / x1 D_0.920495 x1 x1 - + - * D_-0.597477 D_0.732124 - x1 x1 * D_0.424462 + * D_-0.374996 D_0.963109 D_-0.334087 * D_-0.597477 x1 </Tree>
</Individual>

160
(((((-0.597477 * 0.732124) - (x1 - x1)) + (0.424462 * ((-0.374996 * 0.920495) + (-0.374996 * 0.920495)))) - (-0.597477 * x1)) * (((x1 + (((x2 / x2) * (x2 * x1)) * ((-0.374996 / 0.920495) - (x1 / 0.920495)))) / x1) + x1))
<Individual size="1">
	<FitnessMin value="0.0398835"/>
	<Tree size="43">* - + - * D_-0.597477 D_0.732124 - x1 x1 * D_0.424462 + * D_-0.374996 D_0.920495 * D_-0.374996 D_0.920495 * D_-0.597477 x1 + / + x1 * * / x2 x2 * x2 x1 - / D_-0.374996 D_0.920495 / x1 D_0.920495 x1 x1 </Tree>
</Individual>

170
(((((-0.597477 * 0.732124) - (x1 - x1)) + (0.424462 * ((-0.374996 * 0.900478) + (-0.374996 * 0.920495)))) - (-0.597477 * x1)) * (((x1 + (((x2 / x2) * (x2 * x1)) * ((-0.374996 / 0.885684) - (x1 / 0.920495)))) / x1) + x1))
<Individual size="1">
	<FitnessMin value="0.0398453"/>
	<Tree size="43">* - + - * D_-0.597477 D_0.732124 - x1 x1 * D_0.424462 + * D_-0.374996 D_0.900478 * D_-0.374996 D_0.920495 * D_-0.597477 x1 + / + x1 * * / x2 x2 * x2 x1 - / D_-0.374996 D_0.885684 / x1 D_0.920495 x1 x1 </Tree>
</Individual>

180
(((((-0.597477 * 0.732124) - (x1 - x1)) + (0.424462 * ((-0.374996 * 0.900478) + (-0.374996 * 0.920495)))) - (-0.597477 * x1)) * (((x1 + (((x2 / x2) * (x2 * x1)) * (-0.427463 - (x1 / 0.900478)))) / x1) + x1))
<Individual size="1">
	<FitnessMin value="0.0395975"/>
	<Tree size="41">* - + - * D_-0.597477 D_0.732124 - x1 x1 * D_0.424462 + * D_-0.374996 D_0.900478 * D_-0.374996 D_0.920495 * D_-0.597477 x1 + / + x1 * * / x2 x2 * x2 x1 - D_-0.427463 / x1 D_0.900478 x1 x1 </Tree>
</Individual>

190
(((((-0.597477 * 0.732124) - (x1 - x1)) + (0.424462 * ((-0.374996 * 0.886809) + (-0.374996 * 0.920495)))) - (-0.597477 * x1)) * (((x1 + (((x2 / x2) * (x2 * x1)) * (-0.427463 - (x1 / 0.900478)))) / x1) + x1))
<Individual size="1">
	<FitnessMin value="0.0395969"/>
	<Tree size="41">* - + - * D_-0.597477 D_0.732124 - x1 x1 * D_0.424462 + * D_-0.374996 D_0.886809 * D_-0.374996 D_0.920495 * D_-0.597477 x1 + / + x1 * * / x2 x2 * x2 x1 - D_-0.427463 / x1 D_0.900478 x1 x1 </Tree>
</Individual>

200
(((((-0.597477 * 0.732124) - (x1 - x1)) + (0.424462 * ((-0.374996 * 0.886809) + (-0.374996 * 0.920495)))) - (-0.597477 * x1)) * (((x1 + (((x2 / x2) * (x2 * x1)) * (-0.427463 - (x1 / 0.900478)))) / x1) + x1))
<Individual size="1">
	<FitnessMin value="0.0395969"/>
	<Tree size="41">* - + - * D_-0.597477 D_0.732124 - x1 x1 * D_0.424462 + * D_-0.374996 D_0.886809 * D_-0.374996 D_0.920495 * D_-0.597477 x1 + / + x1 * * / x2 x2 * x2 x1 - D_-0.427463 / x1 D_0.900478 x1 x1 </Tree>
</Individual>

210
(((((-0.597477 * 0.732124) - (x1 - x1)) + (0.424462 * ((-0.374996 * 0.886809) + (-0.374996 * 0.920495)))) - (-0.597477 * x1)) * (((x1 + (((x2 / x2) * (x2 * x1)) * ((0.732124 * -0.597477) - (x1 / 0.900478)))) / x1) + x1))
<Individual size="1">
	<FitnessMin value="0.0395911"/>
	<Tree size="43">* - + - * D_-0.597477 D_0.732124 - x1 x1 * D_0.424462 + * D_-0.374996 D_0.886809 * D_-0.374996 D_0.920495 * D_-0.597477 x1 + / + x1 * * / x2 x2 * x2 x1 - * D_0.732124 D_-0.597477 / x1 D_0.900478 x1 x1 </Tree>
</Individual>

220
(((((-0.597477 * 0.732124) - (x1 - x1)) + (0.424462 * ((-0.374996 * 0.886809) + (-0.374996 * 0.920495)))) - (-0.597477 * x1)) * (((x1 + (((x2 / x2) * (x2 * x1)) * ((0.732124 * -0.597477) - (x1 / 0.886809)))) / x1) + x1))
<Individual size="1">
	<FitnessMin value="0.0394436"/>
	<Tree size="43">* - + - * D_-0.597477 D_0.732124 - x1 x1 * D_0.424462 + * D_-0.374996 D_0.886809 * D_-0.374996 D_0.920495 * D_-0.597477 x1 + / + x1 * * / x2 x2 * x2 x1 - * D_0.732124 D_-0.597477 / x1 D_0.886809 x1 x1 </Tree>
</Individual>

230
(((((-0.597477 * 0.732124) - (x1 - x1)) + (0.424462 * ((-0.374996 * 0.886809) + (-0.374996 * 0.920495)))) - (-0.597477 * x1)) * (((x1 + (((x2 / x2) * (x2 * x1)) * ((0.732124 * -0.597477) - (x1 / 0.886809)))) / x1) + x1))
<Individual size="1">
	<FitnessMin value="0.0394436"/>
	<Tree size="43">* - + - * D_-0.597477 D_0.732124 - x1 x1 * D_0.424462 + * D_-0.374996 D_0.886809 * D_-0.374996 D_0.920495 * D_-0.597477 x1 + / + x1 * * / x2 x2 * x2 x1 - * D_0.732124 D_-0.597477 / x1 D_0.886809 x1 x1 </Tree>
</Individual>

240
(((((-0.597477 * 0.732124) - (x1 - x1)) + (0.424462 * ((-0.374996 * 0.886809) + (-0.374996 * 0.920495)))) - (-0.597477 * x1)) * (((x1 + (((x2 / x2) * (x2 * x1)) * ((-0.597477 * 0.74029) - (x1 / 0.886809)))) / x1) + x1))
<Individual size="1">
	<FitnessMin value="0.0394348"/>
	<Tree size="43">* - + - * D_-0.597477 D_0.732124 - x1 x1 * D_0.424462 + * D_-0.374996 D_0.886809 * D_-0.374996 D_0.920495 * D_-0.597477 x1 + / + x1 * * / x2 x2 * x2 x1 - * D_-0.597477 D_0.74029 / x1 D_0.886809 x1 x1 </Tree>
</Individual>

250
(((((-0.597444 * 0.732124) - (x1 - x1)) + (0.424462 * ((-0.374996 * 0.886809) + (-0.374996 * 0.920495)))) - (-0.597477 * x1)) * (((x1 + (((x2 / x2) * (x2 * x1)) * ((-0.597477 * 0.74029) - (x1 / 0.886809)))) / x1) + x1))
<Individual size="1">
	<FitnessMin value="0.0394348"/>
	<Tree size="43">* - + - * D_-0.597444 D_0.732124 - x1 x1 * D_0.424462 + * D_-0.374996 D_0.886809 * D_-0.374996 D_0.920495 * D_-0.597477 x1 + / + x1 * * / x2 x2 * x2 x1 - * D_-0.597477 D_0.74029 / x1 D_0.886809 x1 x1 </Tree>
</Individual>

260
(((((-0.597444 * 0.732124) - (x1 - x1)) + (0.424462 * ((-0.374996 * 0.886809) + (-0.374996 * 0.920495)))) - (-0.597477 * x1)) * (((x1 + (((x2 / x2) * (x2 * x1)) * ((-0.597477 * 0.74029) - (x1 / 0.865174)))) / x1) + x1))
<Individual size="1">
	<FitnessMin value="0.0393207"/>
	<Tree size="43">* - + - * D_-0.597444 D_0.732124 - x1 x1 * D_0.424462 + * D_-0.374996 D_0.886809 * D_-0.374996 D_0.920495 * D_-0.597477 x1 + / + x1 * * / x2 x2 * x2 x1 - * D_-0.597477 D_0.74029 / x1 D_0.865174 x1 x1 </Tree>
</Individual>

270
(((((-0.597444 * 0.732124) - (x1 - x1)) + (0.424462 * ((-0.374996 * 0.865174) + (-0.374996 * 0.920495)))) - (-0.597477 * x1)) * (((x1 + (((x2 / x2) * (x2 * x1)) * ((-0.597477 * 0.74029) - (x1 / 0.865174)))) / x1) + x1))
<Individual size="1">
	<FitnessMin value="0.0393139"/>
	<Tree size="43">* - + - * D_-0.597444 D_0.732124 - x1 x1 * D_0.424462 + * D_-0.374996 D_0.865174 * D_-0.374996 D_0.920495 * D_-0.597477 x1 + / + x1 * * / x2 x2 * x2 x1 - * D_-0.597477 D_0.74029 / x1 D_0.865174 x1 x1 </Tree>
</Individual>

280
(((((-0.597444 * 0.732124) - (x1 - x1)) + (0.424462 * ((-0.374996 * 0.864858) + (-0.374996 * 0.920495)))) - (-0.597477 * x1)) * (((x1 + (((x2 / x2) * (x2 * x1)) * ((-0.597477 * 0.74029) - (x1 / 0.864858)))) / x1) + x1))
<Individual size="1">
	<FitnessMin value="0.0393137"/>
	<Tree size="43">* - + - * D_-0.597444 D_0.732124 - x1 x1 * D_0.424462 + * D_-0.374996 D_0.864858 * D_-0.374996 D_0.920495 * D_-0.597477 x1 + / + x1 * * / x2 x2 * x2 x1 - * D_-0.597477 D_0.74029 / x1 D_0.864858 x1 x1 </Tree>
</Individual>

290
(((((-0.597444 * 0.732124) - (x1 - x1)) + (0.424462 * ((-0.374996 * 0.865174) + (-0.374996 * 0.920495)))) - (-0.597444 * x1)) * (x1 + ((x1 + (((x2 / x2) * (x2 * x1)) * ((-0.597477 * 0.74029) - (x1 / 0.862814)))) / x1)))
<Individual size="1">
	<FitnessMin value="0.0393118"/>
	<Tree size="43">* - + - * D_-0.597444 D_0.732124 - x1 x1 * D_0.424462 + * D_-0.374996 D_0.865174 * D_-0.374996 D_0.920495 * D_-0.597444 x1 + x1 / + x1 * * / x2 x2 * x2 x1 - * D_-0.597477 D_0.74029 / x1 D_0.862814 x1 </Tree>
</Individual>

300
(((((-0.597444 * 0.732124) - (x1 - x1)) + (0.424462 * ((-0.374996 * 0.865174) + (-0.374996 * 0.920495)))) - (-0.597444 * x1)) * (x1 + ((x1 + (((x2 / x2) * (x2 * x1)) * ((-0.597477 * 0.74029) - (x1 / 0.862814)))) / x1)))
<Individual size="1">
	<FitnessMin value="0.0393118"/>
	<Tree size="43">* - + - * D_-0.597444 D_0.732124 - x1 x1 * D_0.424462 + * D_-0.374996 D_0.865174 * D_-0.374996 D_0.920495 * D_-0.597444 x1 + x1 / + x1 * * / x2 x2 * x2 x1 - * D_-0.597477 D_0.74029 / x1 D_0.862814 x1 </Tree>
</Individual>

310
(((((-0.597444 * 0.732124) - (x1 - x1)) + (0.424462 * ((-0.374996 * 0.865174) + (-0.374996 * 0.920495)))) - (-0.597444 * x1)) * (x1 + ((x1 + (((x2 / x2) * (x2 * x1)) * ((-0.609022 * 0.74029) - (x1 / 0.862814)))) / x1)))
<Individual size="1">
	<FitnessMin value="0.0392454"/>
	<Tree size="43">* - + - * D_-0.597444 D_0.732124 - x1 x1 * D_0.424462 + * D_-0.374996 D_0.865174 * D_-0.374996 D_0.920495 * D_-0.597444 x1 + x1 / + x1 * * / x2 x2 * x2 x1 - * D_-0.609022 D_0.74029 / x1 D_0.862814 x1 </Tree>
</Individual>

320
(((((-0.597444 * 0.732124) - (x1 - x1)) + (0.424462 * ((-0.374996 * 0.865174) + (-0.374996 * 0.920495)))) - (-0.597444 * x1)) * (x1 + ((x1 + (((x2 / x2) * (x2 * x1)) * ((-0.609022 * 0.74029) - (x1 / 0.862814)))) / x1)))
<Individual size="1">
	<FitnessMin value="0.0392454"/>
	<Tree size="43">* - + - * D_-0.597444 D_0.732124 - x1 x1 * D_0.424462 + * D_-0.374996 D_0.865174 * D_-0.374996 D_0.920495 * D_-0.597444 x1 + x1 / + x1 * * / x2 x2 * x2 x1 - * D_-0.609022 D_0.74029 / x1 D_0.862814 x1 </Tree>
</Individual>

330
(((((-0.597444 * 0.732124) - (x1 - x1)) + (0.424462 * ((-0.374996 * 0.865174) + (-0.374996 * 0.920495)))) - (-0.597444 * x1)) * (x1 + ((x1 + (((x2 / x2) * (x2 * x1)) * ((-0.609022 * 0.74029) - (x1 / 0.862814)))) / x1)))
<Individual size="1">
	<FitnessMin value="0.0392454"/>
	<Tree size="43">* - + - * D_-0.597444 D_0.732124 - x1 x1 * D_0.424462 + * D_-0.374996 D_0.865174 * D_-0.374996 D_0.920495 * D_-0.597444 x1 + x1 / + x1 * * / x2 x2 * x2 x1 - * D_-0.609022 D_0.74029 / x1 D_0.862814 x1 </Tree>
</Individual>

340
(((((-0.597444 * 0.732124) - (x1 - x1)) + (0.424462 * ((-0.374996 * 0.920495) + (-0.374996 * 0.865174)))) - (-0.597444 * x1)) * (x1 + ((x1 + (((x2 / x2) * (x2 * x1)) * ((-0.609022 * 0.745098) - (x1 / 0.862814)))) / x1)))
<Individual size="1">
	<FitnessMin value="0.039231"/>
	<Tree size="43">* - + - * D_-0.597444 D_0.732124 - x1 x1 * D_0.424462 + * D_-0.374996 D_0.920495 * D_-0.374996 D_0.865174 * D_-0.597444 x1 + x1 / + x1 * * / x2 x2 * x2 x1 - * D_-0.609022 D_0.745098 / x1 D_0.862814 x1 </Tree>
</Individual>

350
(((((-0.597444 * 0.732124) - (x1 - x1)) + (0.424462 * ((-0.374996 * 0.865174) + (-0.374996 * 0.922166)))) - (-0.597444 * x1)) * (x1 + ((x1 + (((x1 / x2) * (x2 * x2)) * ((-0.609022 * 0.745098) - (x1 / 0.862814)))) / x1)))
<Individual size="1">
	<FitnessMin value="0.0392307"/>
	<Tree size="43">* - + - * D_-0.597444 D_0.732124 - x1 x1 * D_0.424462 + * D_-0.374996 D_0.865174 * D_-0.374996 D_0.922166 * D_-0.597444 x1 + x1 / + x1 * * / x1 x2 * x2 x2 - * D_-0.609022 D_0.745098 / x1 D_0.862814 x1 </Tree>
</Individual>

360
(((((-0.597444 * 0.732124) - (x1 - x1)) + (0.424462 * ((-0.374996 * 0.865174) + (-0.374996 * 0.922166)))) - (-0.597444 * x1)) * (x1 + ((x1 + (((x1 / x2) * (x2 * x2)) * ((-0.609022 * 0.745098) - (x1 / 0.862814)))) / x1)))
<Individual size="1">
	<FitnessMin value="0.0392307"/>
	<Tree size="43">* - + - * D_-0.597444 D_0.732124 - x1 x1 * D_0.424462 + * D_-0.374996 D_0.865174 * D_-0.374996 D_0.922166 * D_-0.597444 x1 + x1 / + x1 * * / x1 x2 * x2 x2 - * D_-0.609022 D_0.745098 / x1 D_0.862814 x1 </Tree>
</Individual>

370
(((((0.732124 * -0.597444) - (x1 - x1)) + (0.424462 * ((-0.374996 * 0.865174) + (-0.374996 * 0.922166)))) - (-0.597444 * x1)) * (x1 + ((x1 + (((x1 / x2) * (x2 * x2)) * ((-0.609096 * 0.745098) - (x1 / 0.862814)))) / x1)))
<Individual size="1">
	<FitnessMin value="0.0392305"/>
	<Tree size="43">* - + - * D_0.732124 D_-0.597444 - x1 x1 * D_0.424462 + * D_-0.374996 D_0.865174 * D_-0.374996 D_0.922166 * D_-0.597444 x1 + x1 / + x1 * * / x1 x2 * x2 x2 - * D_-0.609096 D_0.745098 / x1 D_0.862814 x1 </Tree>
</Individual>

380
(((((-0.597444 * 0.732124) - (x1 - x1)) + (0.424462 * ((-0.375511 * 0.865174) + (0.922166 * -0.374996)))) - (-0.597444 * x1)) * (x1 + ((x1 + (((x1 / x2) * (x2 * x2)) * ((-0.609022 * 0.745098) - (x1 / 0.854136)))) / x1)))
<Individual size="1">
	<FitnessMin value="0.0392087"/>
	<Tree size="43">* - + - * D_-0.597444 D_0.732124 - x1 x1 * D_0.424462 + * D_-0.375511 D_0.865174 * D_0.922166 D_-0.374996 * D_-0.597444 x1 + x1 / + x1 * * / x1 x2 * x2 x2 - * D_-0.609022 D_0.745098 / x1 D_0.854136 x1 </Tree>
</Individual>

390
(((((0.732124 * -0.597444) - (x1 - x1)) + (0.424462 * ((-0.375511 * 0.865174) + (-0.374996 * 0.922166)))) - (-0.597444 * x1)) * (x1 + ((x1 + (((x1 / x2) * (x2 * x2)) * ((-0.609096 * 0.745098) - (x1 / 0.854136)))) / x1)))
<Individual size="1">
	<FitnessMin value="0.0392083"/>
	<Tree size="43">* - + - * D_0.732124 D_-0.597444 - x1 x1 * D_0.424462 + * D_-0.375511 D_0.865174 * D_-0.374996 D_0.922166 * D_-0.597444 x1 + x1 / + x1 * * / x1 x2 * x2 x2 - * D_-0.609096 D_0.745098 / x1 D_0.854136 x1 </Tree>
</Individual>

400
(((((-0.597444 * 0.732124) - (x1 - x1)) + (0.424462 * ((-0.375511 * 0.865174) + (0.922166 * -0.374996)))) - (x1 * -0.597444)) * ((-0.0143737 + x1) + ((x1 + (((x1 / x2) * (x2 * x2)) * ((-0.609096 * 0.745098) - (x1 / 0.854136)))) / x1)))
<Individual size="1">
	<FitnessMin value="0.0389806"/>
	<Tree size="45">* - + - * D_-0.597444 D_0.732124 - x1 x1 * D_0.424462 + * D_-0.375511 D_0.865174 * D_0.922166 D_-0.374996 * x1 D_-0.597444 + + D_-0.0143737 x1 / + x1 * * / x1 x2 * x2 x2 - * D_-0.609096 D_0.745098 / x1 D_0.854136 x1 </Tree>
</Individual>

410
(((((-0.597444 * 0.732124) - (x1 - x1)) + (0.424462 * ((-0.375511 * 0.865174) + (-0.374996 * 0.922166)))) - (-0.597444 * x1)) * ((-0.0143737 + x1) + ((x1 + (((x1 / x2) * (x2 * x2)) * ((-0.609096 * 0.747714) - (x1 / 0.854136)))) / x1)))
<Individual size="1">
	<FitnessMin value="0.038967"/>
	<Tree size="45">* - + - * D_-0.597444 D_0.732124 - x1 x1 * D_0.424462 + * D_-0.375511 D_0.865174 * D_-0.374996 D_0.922166 * D_-0.597444 x1 + + D_-0.0143737 x1 / + x1 * * / x1 x2 * x2 x2 - * D_-0.609096 D_0.747714 / x1 D_0.854136 x1 </Tree>
</Individual>

420
(((((-0.597444 * 0.732124) - (x1 - x1)) + (0.424462 * ((-0.375511 * 0.89852) + (-0.374996 * 0.922166)))) - (-0.597444 * x1)) * ((-0.0143737 + x1) + ((x1 + (((x1 / x2) * (x2 * x2)) * ((-0.609096 * 0.747714) - (x1 / 0.854136)))) / x1)))
<Individual size="1">
	<FitnessMin value="0.0389406"/>
	<Tree size="45">* - + - * D_-0.597444 D_0.732124 - x1 x1 * D_0.424462 + * D_-0.375511 D_0.89852 * D_-0.374996 D_0.922166 * D_-0.597444 x1 + + D_-0.0143737 x1 / + x1 * * / x1 x2 * x2 x2 - * D_-0.609096 D_0.747714 / x1 D_0.854136 x1 </Tree>
</Individual>

